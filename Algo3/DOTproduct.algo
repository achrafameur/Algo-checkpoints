ALGORITHM Dot Product

VAR
vector :STRUCT   
    x: INTEGER;
    y : INTEGER;
    z : INTEGER ; 
END_STRUCT
vectors : ARRAY_OF vector [10];  
BEGIN

//if we work with a procedure :
function dotProduct(vector1, vector2)
VAR
ps := 0;
BEGIN
FOR i FROM 0 TO vector1.length-1 DO 
     ps :=ps + (vector1[i] * vector2[i]);
END FOR
write("The dot product of vector1 and vvector2 is ",ps);
END
//Appel procedure :
FOR i FROM 0 TO vectors.length DO
FOR  j FROM i + 1 TO j<vectors.length DO
    dotProduct(vectors[i], vectors[j]);
END FOR
END FOR 

//if we work with a function :
function dotProduct(v1,v2): INTEGER
VAR
ps := 0;
BEGIN
FOR i FROM 0 TO v1.length-1 DO 
     ps :=ps + (v1[i] * v2[i]);
END FOR
return ps;
END
//Appel function :
FOR i FROM 0 TO vectors.length DO
FOR  j FROM i + 1 TO j<vectors.length DO
    IF (dotProduct(vectors[i], vectors[j]) === 0) THEN 
    write(vectors[i] , "and", vectors[j] , "are orthogonal" )
    END IF
END FOR
END FOR 

END